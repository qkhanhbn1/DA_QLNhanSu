@model X.PagedList.IPagedList<DA_QLNhanSu.Models.LeaveJob>
@using X.PagedList.Mvc.Core;
@using System.Text.RegularExpressions;
@{
    ViewData["Title"] = "Quản lý đơn nghỉ việc";
    Layout = "~/Areas/Admins/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="text-primary text-center my-4 fw-bold">DANH SÁCH ĐƠN NGHỈ VIỆC</h1>

<div class="row my-4 align-items-center">
    <!-- Ô tìm kiếm -->
    <form action="" method="post" class="form-inline col-md-6 d-flex">
        <div class="input-group w-75">
            <input class="form-control border-primary" name="name" id="keyword" placeholder="Nhập tên cần tìm..." />
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-search"></i> Tìm kiếm
            </button>
        </div>
    </form>

    <!-- Nút "Tạo mới" và "Xuất Excel" -->
    <div class="col-md-6 d-flex justify-content-end gap-2">
        <a asp-action="Create" class="btn btn-warning shadow-sm">
            <i class="bi bi-plus-circle"></i> Tạo mới
        </a>
        <a asp-action="ExportToExcel" class="btn btn-success shadow-sm">
            <i class="bi bi-file-earmark-excel"></i> Xuất Excel
        </a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover table-bordered shadow-sm">
        <thead class="table-primary text-center">
            <tr class="align-middle">
                <th><i class="bi bi-person-circle"></i> NHÂN SỰ</th>
                <th><i class="bi bi-chat-left-text"></i> LÝ DO NGHỈ VIỆC</th>
                <th><i class="bi bi-box-arrow-right"></i> HÌNH THỨC NGHỈ VIỆC</th>
                <th><i class="bi bi-calendar"></i> NGÀY NGHỈ VIỆC</th>
                <th><i class="bi bi-toggle-on"></i> TRẠNG THÁI</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="align-middle">
                    <td class="align-items-center">
                        <img src="@item.IdeNavigation.Image" alt="@item.IdeNavigation.Name" class="rounded-circle border border-primary" style="width:35px; height:35px;" />
                        <a asp-controller="Employees" asp-action="Details" asp-route-id="@item.IdeNavigation.Ide" class="text-dark fw-bold text-decoration-none">
                            @Html.DisplayFor(modelItem => item.IdeNavigation.Name)
                        </a>
                    </td>
                    <td class="text-center">@item.ReasonLeave</td>
                    <td class="text-center">@item.TypeTermination</td>
                    <td class="text-center">@(item.Date?.ToString("dd/MM/yyyy"))</td>
                    <td class="text-center">
                        <button class="btn btn-status @(item.Status == true ? "btn-success text-white" : "btn-expired")"
                                data-id="@item.Id"
                                data-status="@(item.Status == true ? "true" : "false")"
                                style="width: 100px;">
                            @(item.Status == true ? "Đã duyệt" : "Chờ duyệt")
                        </button>
                    </td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm shadow-sm">
                            <i class="bi bi-pencil-square"></i> Sửa
                        </a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm shadow-sm">
                            <i class="bi bi-eye"></i> Xem
                        </a>
                        <button class="btn btn-danger btn-sm shadow-sm" onclick="confirmDelete('@Url.Action("DeleteAjax", new { id = item.Id })')">
                            <i class="bi bi-trash"></i> Xóa
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="mt-3 d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new X.PagedList.Web.Common.PagedListRenderOptions
{
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
})
</div>
<style>
    .btn-expired {
        background-color: #ffe6e6 !important; /* Nền hồng nhạt hơn */
        color: orange !important; /* Chữ đỏ đậm hơn */
        border: none !important; /* Xóa viền */
        font-weight: bold !important; /* Chữ đậm hơn */
    }

</style>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".btn-status").click(function () {
                var button = $(this);
                var leavejobId = button.data("id");
                var currentStatus = button.data("status");

                $.ajax({
                    url: '/Admins/LeaveJobs/UpdateStatus',
                    type: 'POST',
                    data: { id: leavejobId },
                    success: function (newStatus) {
                        if (newStatus) {
                            button.text("Đã duyệt")
                                .removeClass("btn-expired")
                                .addClass("btn-success text-white");
                        } else {
                            button.text("Chờ duyệt")
                                .removeClass("btn-success text-white")
                                .addClass("btn-expired");
                        }
                        button.data("status", newStatus);
                    },
                    error: function () {
                        alert("Có lỗi xảy ra, vui lòng thử lại!");
                    }
                });
            });
        });

    </script>
    @* /delete---------- *@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confirmDelete(url) {
            Swal.fire({
                title: "Xóa dữ liệu này?",
                text: "Dữ liệu xóa sẽ không thể khôi phục!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "OK",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(url, { method: 'POST' }) // Gửi yêu cầu xóa
                        .then(response => response.json()) // Chuyển về JSON
                        .then(data => {
                            if (data.success) {
                                Swal.fire("Đã xóa!", data.message, "success")
                                    .then(() => location.reload());
                            } else {
                                Swal.fire("Lỗi!", data.message, "error");
                            }
                        })
                        .catch(error => {
                            console.error("Lỗi:", error);
                            Swal.fire("Lỗi!", "Đã xảy ra lỗi trong quá trình xóa.", "error");
                        });
                }
            });
        }
    </script>
}