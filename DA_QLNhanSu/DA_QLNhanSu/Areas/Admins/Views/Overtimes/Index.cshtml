@model X.PagedList.IPagedList<DA_QLNhanSu.Models.Overtime>
@using X.PagedList.Mvc.Core;
@using System.Text.RegularExpressions;
@{
    ViewData["Title"] = "Nhân viên tăng ca";
    Layout = "~/Areas/Admins/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="text-primary">NHÂN VIÊN TĂNG CA</h1>

<div class="row my-4">
    <form action="" method="post" class="form-inline col-md-8">
        <div class="input-group w-50">
            <input class="form-control" name="name" id="keyword" placeholder="Nhập tên cần tìm..." />
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-search"></i> Tìm kiếm
            </button>
        </div>
    </form>
    <div class="col-md-4 text-md-right mt-2 mt-md-0">
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Tạo mới
        </a>
    </div>
</div>

<table class="table table-striped table-hover table-bordered">
    <thead class="table-primary text-center">
        <tr>
            <th>
                TÊN NHÂN VIÊN
            </th>
            <th>
                SỐ GIỜ TĂNG CA
            </th>
            <th>
                HỆ SỐ LƯƠNG
            </th>
            <th>
                LƯƠNG THEO GIỜ
            </th>
            <th>
                SỐ TIỀN TĂNG CA
            </th>
            <th>
                THÁNG
            </th>
            <th>
                NĂM
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    <img src="@item.IdeNavigation?.Image" alt="@item.IdeNavigation.Name" class="rounded-circle" style="width:30px; height:30px;" />
                    &ensp;
                    <a asp-controller="Employees" asp-action="Details" asp-route-id="@item.IdeNavigation.Ide" class="text-dark fw-bold text-decoration-none">
                        @Html.DisplayFor(modelItem => item.IdeNavigation.Name)
                    </a>

                </td>
            <td>
                @Html.DisplayFor(modelItem => item.WorkingHours)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SalaryCoeficient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HourlyWage) VNĐ
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OvertimePay) VNĐ
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Month)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>
            
            <td>
                    <a asp-action="Edit" asp-route-id="@item.Ido" class="btn btn-warning btn-sm">
                        <i class="bi bi-pencil-square"></i> Sửa
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Ido" class="btn btn-info btn-sm">
                        <i class="bi bi-eye"></i> Chi tiết
                    </a>
                    <button class="btn btn-danger btn-sm" onclick="confirmDelete('@Url.Action("DeleteAjax", new { id = item.Ido })')">
                        <i class="bi bi-trash"></i> Xóa
                    </button>
            </td>
        </tr>
}
    </tbody>
</table>
<div class="mt-3">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new X.PagedList.Web.Common.PagedListRenderOptions
{
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
})
</div>
<style>
    .btn-expired {
        background-color: #ffe6e6 !important; /* Nền hồng nhạt hơn */
        color: #cc0000 !important; /* Chữ đỏ đậm hơn */
        border: none !important; /* Xóa viền */
        font-weight: bold !important; /* Chữ đậm hơn */
    }

</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmDelete(url) {
        Swal.fire({
            title: "Xóa dữ liệu này?",
            text: "Dữ liệu xóa sẽ không thể khôi phục!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#6c757d",
            confirmButtonText: "OK",
            cancelButtonText: "Cancel"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(url, { method: 'POST' }) // Gửi yêu cầu xóa
                    .then(response => response.json()) // Chuyển về JSON
                    .then(data => {
                        if (data.success) {
                            Swal.fire("Đã xóa!", data.message, "success")
                                .then(() => location.reload());
                        } else {
                            Swal.fire("Lỗi!", data.message, "error");
                        }
                    })
                    .catch(error => {
                        console.error("Lỗi:", error);
                        Swal.fire("Lỗi!", "Đã xảy ra lỗi trong quá trình xóa.", "error");
                    });
            }
        });
    }
</script>